// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int @id @default(autoincrement())
  first_name      String @db.VarChar(50)
  last_name       String @db.VarChar (50)
  email           String @db.VarChar (50)
  password        String @db.VarChar (100)
  role            String @db.VarChar (20)
  events          Event[]
  tickets         Ticket[]
  transactions    Transaction[]
  points          Points[]
  disconts        Discount[]
  referrals       Referral[]
  created_at      DateTime @default(now())

  @@map("users")
}

model Event {
  id                              Int @id @default(autoincrement())
  user                            User @relation(fields: [created_by],references: [id])
  created_by                      Int
  title                           String? @db.VarChar(200)
  description                     String?
  image                           String? @db.VarChar(50)
  location                        String? @db.VarChar (50)
  date                            DateTime?
  event_type                      String? @db.VarChar(50)
  price                           Int?
  max_voucher_discount            Int?
  ticket                          Ticket[]
  category                        String? @db.VarChar (50)
  created_at                      DateTime @default(now())
  updated_at                      DateTime @updatedAt

  @@map("events")
}

model Ticket {
  id           Int          @id @default(autoincrement())
  eventId      Int
  userId       Int
  ticketType   String
  price        Decimal
  status       String
  purchaseDate DateTime
  event        Event        @relation(fields: [eventId], references: [id])
  user         User         @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("tickets")
}

model Transaction {
  id         Int      @id @default(autoincrement())
  userId     Int
  ticketId   Int
  amount     Decimal
  pointsUsed Int
  discountId Int?
  date       DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  ticket     Ticket   @relation(fields: [ticketId], references: [id])
  discount   Discount? @relation(fields: [discountId], references: [id])

  @@map("transactions")
}

model Points {
  id         Int      @id @default(autoincrement())
  userId     Int
  amount     Int
  earnedDate DateTime @default(now())
  expiryDate DateTime
  user       User     @relation(fields: [userId], references: [id])

  @@map("points")
}

model Referral {
  id           Int      @id @default(autoincrement())
  referrerId   Int
  referralCode String   @unique
  createdAt    DateTime @default(now())
  referrer     User     @relation(fields: [referrerId], references: [id])

  @@map("referrals")
}

model Discount {
  id         Int      @id @default(autoincrement())
  userId     Int
  percentage Decimal
  startDate  DateTime
  endDate    DateTime
  user       User     @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("discounts")
}
